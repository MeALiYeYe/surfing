#订阅名和订阅链接、图标
Sub1: &Sub1 "Linkeless"
Sub1Icon: &Sub1Icon "https://raw.githubusercontent.com/lige47/QuanX-icon-rule/main/icon/Linkeless.png"
Sub2: &Sub2 "守候网络"
Sub2Icon: &Sub2Icon "https://raw.githubusercontent.com/lige47/QuanX-icon-rule/main/icon/shouhou(4).png"

# 连通性检测url
ProxyTestUrl: &ProxyTestUrl "https://www.apple.com/library/test/success.html"
DirectTestUrl: &DirectTestUrl "http://wifi.vivo.com.cn/generate_204"

# 节点筛选正则
FilterHK: &FilterHK '(?i)港|香港|🇭🇰|HK|Hong|HKG'
FilterTW: &FilterTW '(?i)台|台湾|🇼🇸|🇹🇼|TW|tai|TPE|TSA|KHH'
FilterSG: &FilterSG '(?i)坡|新加坡|🇸🇬|SG|Sing|SIN|XSP'
FilterJP: &FilterJP '(?i)日|日本|🇯🇵|JP|Japan|NRT|HND|KIX|CTS|FUK'
FilterKR: &FilterKR '(?i)韩|韩国|🇰🇷|韓|韓國|首尔|南朝鲜|KR|KOR|Korea|South'
FilterUS: &FilterUS '(?i)美|美国|🇺🇸|US|USA|JFK|LAX|ORD|ATL|DFW|SFO|MIA|SEA|IAD'
FilterEU: &FilterEU '(?i)(🇧🇪|🇨🇿|🇩🇰|🇫🇮|🇫🇷|🇩🇪|🇮🇪|🇮🇹|🇱🇹|🇱🇺|🇳🇱|🇵🇱|🇸🇪|🇬🇧|CDG|FRA|AMS|MAD|BCN|FCO|MUC|BRU)'
FilterOther: &FilterOther '^(?!.*(香港|台湾|新加坡|日本|韩国|美国|🇭🇰|🇼🇸|🇹🇼|🇸🇬|🇯🇵|🇰🇷|🇺🇸|🇬🇧|🇦🇹|🇧🇪|🇨🇿|🇩🇰|🇫🇮|🇫🇷|🇩🇪|🇮🇪|🇮🇹|🇱🇹|🇱🇺|🇳🇱|🇵🇱|🇸🇪|HK|TW|SG|JP|KR|US|GB|CDG|FRA|AMS|MAD|BCN|FCO|MUC|BRU|HKG|TPE|TSA|KHH|SIN|XSP|NRT|HND|KIX|CTS|FUK|JFK|LAX|ORD|ATL|DFW|SFO|MIA|SEA|IAD|LHR|LGW))'
ExcludeFilter: &ExcludeFilter '(?i)(佣金|套餐|官网|官方|售后|免翻|过期|剩余|到期|流量|更新|点外|重置|免流|优惠|超实惠|址|AFF|Direct|Days|Date)'
FilterLowMag: &FilterLowMag '0\.\d+'           #低倍率节点
FilterHighMag: &FilterHighMag '(?!0\.)[1-9]\d*(?:\.\d+)'            #高倍率节点

# 订阅更新与测试
Proxyer: &Proxyer
    type: http
    interval: 3600
    health-check:
      enable: true
      url: *ProxyTestUrl
      tolerance: 50
      interval: 300
      timeout: 5000

# 订阅引用
Uses: &Uses 
    include-all-providers: true
    exclude-filter: *ExcludeFilter

# 手动选择策略组
Selector: &Selector
  type: select
  <<: *Uses
  hidden: true

# 延迟优选策略组
auto: &auto
   type: url-test 
   url: *ProxyTestUrl
   tolerance : 50
   interval: 300
   timeout : 5000
   lazy: true
   <<: *Uses
   hidden: true     

# 负载均衡策略组策略可选round-robin, consistent-hashing
loads: &loads
   type: load-balance
   url: *ProxyTestUrl
   interval: 300
   strategy: sticky-sessions
   lazy: true
   <<: *Uses
   hidden: true

# 故障转移策略组
fallb: &fallb
  type: fallback
  url: *ProxyTestUrl
  interval: 300
  lazy: true
  <<: *Uses
  hidden: true

# 规则集类型
rule-anchor:
  # 规则类型:domain
  dom: &dom { type: http, behavior: domain, interval: 86400 }
  # 规则类型:classical
  cla: &cla { type: http, behavior: classical, interval: 86400 }
  # 规则类型:ipcidr
  ipc: &ipc { type: http, behavior: ipcidr, interval: 86400 }

# 策略组引用
Proxy_groups: &Proxy_groups
   type: select
   proxies: [ 直连, 免流, 香港, 台湾, 狮城, 日本, 韩国, 美国, 欧洲, 其他, 低倍, 高倍 ]

# 免流区
Freec: &Freec
  type: fallback
  interval: 300
  url: *DirectTestUrl
  proxies: [ "南京电信", "南京电信1", "广州电信", "北京电信", "北京电信1", "北京电信2", "广州联通", "广州联通1", "苏州联通", "南京联通", "保定联通", "保定联通1", "广州移动", "南京移动", "动态百度", "[钉钉]广州", "[三爱]广州", "[天翼]广州" ]

baidu: &baidu
  type: http
  port: 443
  skip-cert-verify: true
  udp: true
  username: ''
  password: ''
  headers:
    Host: 153.3.236.22:443
    X-T5-Auth: "683556433"
    Connection: Keep-Alive
    User-Agent: okhttp/3.11.0 Dalvik/2.1.0 (Linux; U; Android 11; Redmi K30 5G Build/RKQ1.200826.002) baiduboxapp/11.0.5.12 (Baidu; P1 11)
dingding: &dingding
  type: http
  port: 443
  skip-cert-verify: true
  udp: true
  username: ''
  password: ''
  headers:
    Host: 153.3.236.22:443
    X-T5-Auth: "683556433"
    Connection: Keep-Alive
    With-At: gw.alicdn.com
sanai: &sanai
  type: http
  port: 443
  udp: true
  username: ''
  password: ''
  headers:
    Host: 153.3.236.22:443
    X-T5-Auth: "683556433"
    Connection: Keep-Alive
    With-At: ltetp.tv189.com
yunpan: &yunpan
  type: http
  port: 443
  udp: true
  username: ''
  password: ''
  headers:
    X-T5-Auth: "683556433"
    Host: 153.3.236.22:443
    Connection: Keep-Alive
    With-At: download.cloud.189.cn
#############锚点结束###########

# 出站代理
proxies:
  - { name: "直连", type: direct }
  - { name: "禁止", type: reject }
  - { name: "DNS劫持", type: dns }
  - { name: "动态百度", server: cloudnproxy.baidu.com, <<: *baidu }
  - { name: "北京电信", server: 220.181.33.174, <<: *baidu }
  - { name: "北京电信1", server: 220.181.7.1, <<: *baidu }
  - { name: "北京电信2", server: 220.181.111.189, <<: *baidu }
  - { name: "南京电信", server: 180.101.50.249, <<: *baidu }
  - { name: "南京电信1", server: 180.101.50.208, <<: *baidu }
  - { name: "广州电信", server: 14.215.182.75, <<: *baidu }
  - { name: "苏州联通", server: 157.0.146.158, <<: *baidu }
  - { name: "保定联通", server: 110.242.70.68, <<: *baidu }
  - { name: "保定联通1", server: 110.242.70.69, <<: *baidu }
  - { name: "广州联通", server: 163.177.17.6, <<: *baidu }
  - { name: "广州联通1", server: 163.177.17.189, <<: *baidu }
  - { name: "南京联通", server: 153.3.237.117, <<: *baidu }
  - { name: "广州移动", server: 183.240.98.84, <<: *baidu }
  - { name: "南京移动", server: 36.155.169.188, <<: *baidu }
  - { name: "[钉钉]广州", server: 163.177.17.189, <<: *dingding }
  - { name: "[三爱]广州", server: 163.177.17.189, <<: *sanai }
  - { name: "[天翼]广州", server: 163.177.17.189, <<: *yunpan }

 
# 外部订阅
proxy-providers:      
  Sub-Store:
    <<: *Proxyer
    path: ./proxies/Sub-Store.yaml
    url: "http://127.0.0.1:3000/download/collection/Sub"
    override:
      udp: true

# 策略组
proxy-groups:
  - { name: ADBlock, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Advertising.png",  type: select, proxies: [ REJECT-DROP, DIRECT ] }
  - { name: Emby, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Emby.png", <<: *Proxy_groups }
  - { name: TikTok, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/TikTok.png", <<: *Proxy_groups }
  - { name: Netflix, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netflix.png", <<: *Proxy_groups } 
  - { name: YouTube, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube.png", <<: *Proxy_groups }
  - { name: Spotify, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Spotify.png", <<: *Proxy_groups }
  - { name: Facebook, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Facebook.png", <<: *Proxy_groups }
  - { name: Twitter, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Twitter.png", <<: *Proxy_groups }
  - { name: Media, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/ForeignMedia.png", <<: *Proxy_groups }
  - { name: Ai, icon: "https://raw.githubusercontent.com/lige47/QuanX-icon-rule/main/icon/ChatGPT-green.png", <<: *Proxy_groups }
  - { name: Telegram, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png", <<: *Proxy_groups }
  - { name: Google, icon: "https://raw.githubusercontent.com/lige47/QuanX-icon-rule/main/icon/google(1).png", <<: *Proxy_groups }
  - { name: Cloudflare, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Cloudflare.png", <<: *Proxy_groups }
  - { name: Github, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/GitHub.png", <<: *Proxy_groups }
  - { name: Microsoft, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Microsoft.png", <<: *Proxy_groups }
  - { name: Global, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Global.png", <<: *Proxy_groups }
  - { name: Redirect, icon: "https://raw.githubusercontent.com/lige47/QuanX-icon-rule/refs/heads/main/icon/direct.png", <<: *Proxy_groups }
  - { name: Domestic, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Domestic.png", <<: *Proxy_groups }
  - { name: Final, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Final.png", <<: *Proxy_groups }
  # 手动＆自动
  - { name: 免流, icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Cellular.png", <<: *Freec }
#  - { name: 自选, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/MY.png", <<: *Selector }
#  - { name: 自动, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png", <<: *auto }
  # 地区故障转移分组(fallback)
  - { name: 香港, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Hong_Kong.png", <<: *fallb, filter: *FilterHK }  
  - { name: 台湾, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Taiwan.png", <<: *fallb, filter: *FilterTW } 
  - { name: 狮城, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Singapore.png", <<: *fallb, filter: *FilterSG } 
  - { name: 日本, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Japan.png", <<: *fallb, filter: *FilterJP }
  - { name: 韩国, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Korea.png", <<: *fallb, filter: *FilterKR }  
  - { name: 美国, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/United_States.png", <<: *fallb, filter: *FilterUS }
  - { name: 欧洲, icon: "https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/European_Union.png", <<: *fallb, filter: *FilterEU }
  - { name: 其他, icon: "https://raw.githubusercontent.com/lige47/QuanX-icon-rule/main/icon/quanqiu(3).png", <<: *fallb, filter: *FilterOther}
  - { name: 低倍, icon: "https://raw.githubusercontent.com/lige47/QuanX-icon-rule/main/icon/liuliang(2).png", <<:  *fallb, filter: *FilterLowMag }
  - { name: 高倍, icon: "https://raw.githubusercontent.com/lige47/QuanX-icon-rule/main/icon/liuliang(3).png", <<: *fallb, filter: *FilterHighMag }
# 机场分组
  - name: *Sub1
    <<: *Selector
    filter: *Sub1
    icon: *Sub1Icon
  - name: *Sub2
    <<: *Selector
    filter: *Sub2
    icon: *Sub2Icon

# 规则集
rule-providers:
  秋风广告规则: { <<: *dom, format: yaml, url: "https://raw.githubusercontent.com/TG-Twilight/AWAvenue-Ads-Rule/main/Filters/AWAvenue-Ads-Rule-Clash.yaml", path: ./rules/秋风广告规则.yaml }
  直连规则: { <<: *cla, format: yaml, url: "https://raw.githubusercontent.com/MeALiYeYe/surfing/refs/heads/main/box_bll/clash/rules/UserDirect.yaml", path: ./rules/直连规则.yaml }
  拦截规则: { <<: *cla, format: yaml, url: "https://raw.githubusercontent.com/MeALiYeYe/surfing/refs/heads/main/box_bll/clash/rules/UserReject.yaml", path: ./rules/拦截规则.yaml }
  代理规则: { <<: *cla, format: yaml, url: "https://raw.githubusercontent.com/MeALiYeYe/surfing/refs/heads/main/box_bll/clash/rules/UserProxy.yaml", path: ./rules/代理规则.yaml }
#  advertising: { <<: *cla, format: yaml, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Advertising/Advertising_Classical_No_Resolve.yaml", path: ./rules/advertising.yaml }

# 路由规则
rules:
  - DST-PORT,53,DNS劫持
  - OR,((DOMAIN-SUFFIX,cn2gias.uk),(DOMAIN,random.ouonet.org)),Emby

  - RULE-SET,拦截规则,ADBlock
  - RULE-SET,直连规则,DIRECT
  - RULE-SET,代理规则,Global
  - RULE-SET,秋风广告规则,ADBlock
#  - RULE-SET,advertising,ADBlock

  - GEOSITE,category-ads-all,ADBlock
  - GEOSITE,category-httpdns-cn,ADBlock
  - GEOSITE,private,直连
  - GEOSITE,category-companies@cn,Domestic
  - GEOSITE,youtube,YouTube
  - GEOSITE,tiktok,TikTok
  - GEOSITE,netflix,Netflix
  - GEOSITE,spotify,Spotify
  - GEOSITE,category-entertainment,Media
  - GEOSITE,twitter,Twitter
  - GEOSITE,telegram,Telegram
  - GEOSITE,facebook,Facebook
  - GEOSITE,google,Google
  - GEOSITE,cloudflare,Cloudflare
  - GEOSITE,category-ai-chat-!cn,Ai
  - GEOSITE,github,Github
  - GEOSITE,microsoft,Microsoft
  - GEOSITE,geolocation-!cn,Global
  - GEOSITE,sina,Redirect
  - GEOSITE,zhihu,Redirect
  - GEOSITE,bytedance,Redirect
  - GEOSITE,category-entertainment-cn,Redirect
  - GEOSITE,cn,Domestic 
   
  - GEOIP,private,直连,no-resolve
  - GEOIP,netflix,Netflix,no-resolve
  - GEOIP,facebook,Facebook,no-resolve
  - GEOIP,twitter,Twitter,no-resolve
  - GEOIP,telegram,Telegram,no-resolve
  - GEOIP,google,Google,no-resolve
  - GEOIP,cloudflare,Cloudflare,no-resolve
  - GEOIP,cn,Domestic,no-resolve

  - MATCH,Final

#####################
#通用配置
mixed-port: 7890
redir-port: 7891
tproxy-port: 1536
ipv6: true
mode: Rule
allow-lan: true
bind-address: "*"
geodata-mode: true
geo-auto-update: true
geo-update-interval: 168
geox-url:
  geoip: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip.dat"
  geosite: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country.mmdb"
  asn: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/GeoLite2-ASN.mmdb"

unified-delay: true
tcp-concurrent: true
log-level: silent
find-process-mode: strict
global-client-fingerprint: chrome
external-controller: 0.0.0.0:9090
#面板默认 Meta 可选 Yacd / Zash 重启模块即可加载
external-ui: ../panel/Zash/ # 主推zash
external-ui-url: "https://github.com/Zephyruso/zashboard/releases/latest/download/dist.zip"
secret: ""

# 策略组选择和fake-ip缓存
profile:
  store-selected: true
  store-fake-ip: true

# 域名嗅探
sniffer:
  enable: true
  force-dns-mapping: true
  parse-pure-ip: true
  override-destination: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "Mijia Cloud"

# Tunnel配置
tun:
  enable: true
  device: Mihomo
  stack: mixed
  dns-hijack:
    - any:53
    - tcp://any:53
  udp-timeout: 300
  auto-route: true
  strict-route: true
  auto-redirect: false
  auto-detect-interface: true
  route-exclude-address:
    - 192.168.0.0/16
    - 10.0.0.0/8
    - 172.16.0.0/12
    - 100.64.0.0/10
    - fc00::/7
    - fe80::/10

# hosts在fake-ip下不生效
hosts:
  raw.githubusercontent.com:
    - 185.199.108.133
    - 185.199.109.133
    - 185.199.110.133
    - 185.199.111.133
    - 2606:50c0:8000::154
    - 2606:50c0:8001::154
    - 2606:50c0:8002::154
    - 2606:50c0:8003::154

# DNS配置
dns:
  enable: true
  listen: :1053
  ipv6: true
  prefer-h3: true
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.0/15
  fake-ip-filter:
    - 'geosite:cn,private'
    - 'localhost.ptlogin2.qq.com'
  proxy-server-nameserver:
    - 'https://dns.alidns.com/dns-query#Domestic&h3=true'
  direct-nameserver:
    - 'https://dns.alidns.com/dns-query#Domestic&h3=true'
  nameserver-policy:
    'geosite:category-ads-all': rcode://success
    'geosite:cn,private,apple,microsoft':
      - 'https://dns.alidns.com/dns-query#Domestic&h3=true'
  nameserver:
    - 'https://dns.google/dns-query#Google&h3=true'
    - 'https://dns.cloudflare.com/dns-query#Cloudflare&h3=true'
